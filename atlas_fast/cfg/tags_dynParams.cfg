#! /usr/bin/env python

PACKAGE ='atlas_fast'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

frequency_enum = gen.enum([gen.const("128_Hz",      int_t, 4,   "128 Hz - 0.0078125 sec"),
                           gen.const("64_Hz",       int_t, 5,   "64 Hz - 0.015625 sec"),
                           gen.const("32_Hz",       int_t, 6,   "32 Hz - 0.03125 sec"),
                           gen.const("16_Hz",       int_t, 7,   "16 Hz - 0.0625 sec"),
                           gen.const("8_Hz",        int_t, 8,   "8 Hz - 0.125 sec"),
                           gen.const("4_Hz",        int_t, 9,   "4 Hz - 0.25 sec"),
                           gen.const("2_Hz",        int_t, 10,  "2 Hz - 0.5 sec"),
                           gen.const("1_Hz",        int_t, 11,  "1 Hz - 1 sec"),
                           gen.const("0_5_Hz",      int_t, 12,  "0.5 Hz - 2 sec"),
                           gen.const("0_25_Hz",     int_t, 13,  "0.25 Hz - 4 sec"),
                           gen.const("0_125_Hz",    int_t, 14,  "0.0125 Hz - 8 sec"),
                           gen.const("0_0625_Hz",   int_t, 15,  "0.0625 Hz - 16 sec"),
                           gen.const("0_03125_Hz",  int_t, 16,  "0.03125 Hz - 32 sec"),
                           gen.const("0_015625_Hz", int_t, 17,  "0.015625 Hz - 64 sec"),],
                          "An enum to set the sync frequency")

reliability_enum = gen.enum([gen.const("Lowest",        int_t, 0,   "Turn off frame lookahead"),
                             gen.const("Low",           int_t, 1,   "Listen during the last 2 transmission frames"),
                             gen.const("Medium",        int_t, 2,   "Listen during the last 4 transmission frames"),
                             gen.const("High",          int_t, 3,   "Listen during the last 8 transmission frames")],
                            "An enum to set the reliability")

basic = gen.add_group("Basic", type = "hide")
advanced = gen.add_group("Advanced", type = "hide")
error = gen.add_group("Error", type = "hide")

#       Name                    Type      Level   Description                     Default     Min     Max     Edit Method                 Comments+
gen.add("eui",                  str_t,    0,      "EUI")
gen.add("reliability",          int_t,    0,      "Search for reconfigurations "
                                                  "in previous 2^reliability "
                                                  "sync frames",                  1,          0,      3,      edit_method=reliability_enum)
gen.add("enable",               bool_t,   1,      "Enable tag",                   False)
gen.add("auto_schedule",        bool_t,   0,      "ROS autoSchedule",             True)
gen.add("advanced_mode",        bool_t,   0,      "Toggle advanced mode",         False)

basic.add("sync_frequency",     int_t,    0,      "Synchronization frequency",    12,         4,      17,     edit_method=frequency_enum)
basic.add("transmit_frequency", int_t,    0,      "Transmission frequency",       8,          4,      17,     edit_method=frequency_enum)

advanced.add("period",          int_t,    0,      "Peiod in 2^period slots",      8,          4,      16)                                 # Minimum period is 2^4 -> transmit every 16 slots.
advanced.add("offset",          int_t,    0,      "Offset in slots",              8,          1,      65535)                              # Minimum offset is 1. 0 is reserved for sync
                                                                                                                                          # messages. Maximum offset is 15 (16 total slots)
advanced.add("repetitions",     int_t,    0,      "Repetitions",                  12,         1,      65535)                              # At least 1 repetition should be issue.

error.add("error_message",      str_t,    0,      "Errors")

exit(gen.generate(PACKAGE, "atlas_fast", "tags_dynParams"))
